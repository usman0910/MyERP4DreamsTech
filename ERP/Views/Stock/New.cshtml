@model ERP.ViewModels.StockVM
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm("New", "Stock", FormMethod.Post, new { @class = "main-content form-horizontal", role = "form" }))
{

    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading clearfix">
                    <h3 class="panel-title">Simple Form Wizard</h3>
                    <ul class="panel-tool-options">
                        <li><a data-rel="collapse" href="#"><i class="icon-down-open"></i></a></li>
                        <li><a data-rel="reload" href="#"><i class="icon-arrows-ccw"></i></a></li>
                        <li><a data-rel="close" href="#"><i class="icon-cancel"></i></a></li>
                    </ul>
                </div>
                <div class="panel-body">
                    <div id="rootwizard" class="form-horizontal form-wizard">
                        <div class="wizard-navbar">
                            <ul>
                                <li class="completed active"><a href="#tab1" data-toggle="tab"><span>1</span>Equipment Stock</a></li>
                                <li class=""><a href="#tab2" data-toggle="tab"><span>2</span>Cable Stock</a></li>
                            </ul>
                        </div>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tab1">
                                <div class="row">
                                    <div class="textbox-margintop">


                                        <div class="col-md-6">

                                            <label class="col-md-4 control-label">Select Equipment</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(c => c.StockEquipmentIn.EquipmentId, new SelectList(Model.Equipments, "Id", "Name"), "Select Equipment", new { @class = "form-control" })
                                            </div>

                                        </div>
                                        <div class="col-md-6">


                                            <label class="col-md-4 control-label">Equipment Type</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(c => c.StockEquipmentIn.EquipmentTypeId, new SelectList(Model.EquipmentTypes, "Id", "Type"), "Select Equipment Type", new { @class = "form-control" })
                                            </div>

                                        </div>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="textbox-margintop">

                                        <div class="col-md-6">


                                            <label class="col-md-4 control-label">Quantity</label>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(p => p.StockEquipmentIn.Quantity, new { @class = "form-control" })
                                            </div>

                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="tab-pane" id="tab2">
                                <div class="row">
                                    <div class="textbox-margintop">


                                        <div class="col-md-6">

                                            <label class="col-md-4 control-label">Cable Brand</label>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(c => c.StockCableIn.CableRollId, new SelectList(Model.Cables, "Id", "Brand"), "Select Cable", new { @class = "form-control" })
                                            </div>

                                        </div>
                                        <div class="col-md-6">


                                            <label class="col-md-4 control-label">Total Feets</label>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(p => p.StockCableIn.Totalfeets, new { @class = "form-control" })
                                            </div>

                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div style="text-align:center; margin-top:15px;">
                            <button type="submit" class="btn btn-primary">Save Record</button>
                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {

        // Form Wizard
        if ($.isFunction($.fn.bootstrapWizard)) {
            $('#rootwizard').bootstrapWizard({
                tabClass: 'wizard-steps',
                onTabShow: function ($tab, $navigation, index) {
                    $tab.prevAll().addClass('completed');
                    $tab.nextAll().removeClass('completed');
                    $tab.removeClass('completed');
                }

            });

            $(".validate-form-wizard").each(function (i, formwizard) {
                var $this = $(formwizard);
                var $progress = $this.find(".steps-progress div");

                var $validator = $this.validate({
                    rules: {
                        username: {
                            required: true,
                            minlength: 3
                        },
                        password: {
                            required: true,
                            minlength: 3
                        },
                        confirmpassword: {
                            required: true,
                            minlength: 3
                        },
                        email: {
                            required: true,
                            email: true,
                            minlength: 3,
                        }
                    }
                });

                // Validation
                var checkValidaion = function (tab, navigation, index) {
                    if ($this.hasClass('validate')) {
                        var $valid = $this.valid();
                        if (!$valid) {
                            $validator.focusInvalid();
                            return false;
                        }
                    }

                    return true;
                };

                $this.bootstrapWizard({
                    tabClass: 'wizard-steps',
                    onNext: checkValidaion,
                    onTabClick: checkValidaion,
                    onTabShow: function ($tab, $navigation, index) {
                        $tab.removeClass('completed');
                        $tab.prevAll().addClass('completed');
                        $tab.nextAll().removeClass('completed');
                    }
                });
            });
        }

    });
</script>